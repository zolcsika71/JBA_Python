type: edu
files:
- name: billsplitter.py
  visible: true
  text: |
    # write your code here
  learner_created: false
- name: tests.py
  visible: false
  text: |
    from hstest.stage_test import *
    from hstest.test_case import TestCase

    END_RESULT = "No one is going to be lucky"
    INVALID_RESULT = "No one is joining for the party"


    class BillSplitterTest(StageTest):
        def generate(self) -> List[TestCase]:
            return [TestCase(stdin=["5", "Marc", "Jem", "Monica", "Anna", "Jason", "100", "Yes"],
                             attach=["5", "100", "Yes", ["Marc", "Jem", "Monica", "Anna", "Jason"]]),
                    TestCase(stdin=["3", "Jake", "Sam", "Irina", "109", "No"],
                             attach=["3", "109", "No", ["Jake", "Sam", "Irina"]]),
                    TestCase(stdin=["0", "100"], attach=["0", "100"]),
                    TestCase(stdin=["-1", "-5"], attach=["-1", "-5"])
                    ]

        def check(self, reply: str, attach: Any) -> CheckResult:
            strings = [s for s in reply.split('\n') if s != '']
            if int(attach[0]) <= 0:
                if len(strings) != 2:
                    return CheckResult.wrong("Your code is not printing expected number of lines of output")
                elif strings[1] != INVALID_RESULT:
                    return CheckResult.wrong("Expected output was No one is joining for the party!")
                return CheckResult.correct()

            elif int(attach[0]) > 0 and len(strings) != 5:
                return CheckResult.wrong("Your code is not printing expected number of lines of output, check examples")
            elif (attach[2] == "Yes"):
                lucky_string = strings[4].split(" ")
                name = lucky_string[0]
                if (name not in attach[3]):
                    return CheckResult.wrong(
                        "Expected output is a random name from dictionary keys, but we got something else")
            elif (attach[2] == "No"):
                if strings[4] != END_RESULT:
                    return CheckResult.wrong("Output should be - No one is going to be lucky")
            return CheckResult.correct()


    if __name__ == '__main__':
        BillSplitterTest().run_tests()
  learner_created: false
- name: input.txt
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/175/stages/903/implement#comment
status: Failed
feedback:
  message: |-
    Wrong answer in test #1

    Your code is not printing expected number of lines of output, check examples

    Please find below the output of your program during this failed test.
    Note that the '>' character indicates the beginning of the input line.

    ---

    Enter the number of friends joining (including you):
    > 5

    Enter the name of every friend (including you), each on a new line:
    > Marc
    > Jem
    > Monica
    > Anna
    > Jason

    Enter the total bill value:
    > 100

    Do you want to use the "Who is lucky?" feature? Write Yes/No:
    > Yes

    Marc is the lucky one!

    {'Marc': 0, 'Jem': 25, 'Monica': 25, 'Anna': 25, 'Jason': 25}
  time: Wed, 19 May 2021 15:41:17 UTC
record: 3
